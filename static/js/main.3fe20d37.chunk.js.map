{"version":3,"sources":["components/Card.js","components/CardList.js","components/Input.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","robot","name","email","id","url","className","src","alt","CardList","robots","map","robo","Input","type","placeholder","htmlFor","onChange","Scroll","style","overflowY","border","height","width","margin","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","handleChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6OAgBeA,EAdF,SAACC,GAAW,IAAD,EACMA,EAAMC,MAA1BC,EADc,EACdA,KAAMC,EADQ,EACRA,MAAOC,EADC,EACDA,GACfC,EAAG,+BAA2BD,EAA3B,YACT,OACE,sBAAKE,UAAU,sDAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAI,UACnB,gCACE,6BAAKN,IACL,mBAAGI,UAAU,OAAb,SAAqBH,WCIdM,EAVE,SAACT,GAChB,OACE,qBAAKM,UAAU,gCAAf,SACGN,EAAMU,OAAOC,KAAI,SAACC,GACjB,OAAO,cAAC,EAAD,CAAoBX,MAAOW,GAAhBA,EAAKR,UCUhBS,EAfD,SAACb,GAEb,OACE,qBAAKM,UAAU,MAAf,SACE,uBACEQ,KAAK,OACLR,UAAU,yCACVS,YAAY,mBACZC,QAAQ,SACRC,SAAUjB,EAAMiB,cCOTC,EAjBA,SAAClB,GACd,OACE,qBACEmB,MAAO,CACLC,UAAW,SACXC,OAAQ,qBAERC,OAAQ,QACRC,MAAO,MACPC,OAAQ,UAPZ,SAUGxB,EAAMyB,YCMEC,E,kDAjBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEC,UAAU,GAFb,E,qDAKd,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,yDAEFG,KAAK/B,MAAMyB,a,GAdMQ,IAAMC,WCkDnBC,G,wDA5Cb,aAAe,IAAD,8BACZ,gBAiBFC,aAAe,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAjB1C,EAAKb,MAAQ,CACXjB,OAAQ,GACR4B,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKb,SAAS,CAAEtB,OAAQmC,S,oBAQ9B,WAAU,IAAD,EACyBd,KAAKJ,MAA7BjB,EADD,EACCA,OAAQ4B,EADT,EACSA,YACVQ,EAAiBpC,EAAOqC,QAAO,SAAC9C,GACpC,OAAOA,EAAMC,KAAK8C,cAAcC,SAASX,MAG3C,OAAQ5B,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,YAAd,yBACA,cAAC,EAAD,CAAOW,SAAUc,KAAKK,eACtB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQoC,WAPxB,oBAAIxC,UAAU,KAAd,4B,GA9BY2B,IAAMC,YCKTiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.3fe20d37.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const { name, email, id } = props.robot;\r\n  const url = `https://robohash.org/${id}?200x200`;\r\n  return (\r\n    <div className=\"tc dib bg-light-green br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={url} alt=\"robot\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p className=\"f4 b\">{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport React from \"react\";\r\n// import Input from \"./Input\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"flex justify-center flex-wrap\">\r\n      {props.robots.map((robo) => {\r\n        return <Card key={robo.id} robot={robo} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n// import CardList from \"./CardList\";\r\n\r\nconst Input = (props) => {\r\n  // console.log(props);\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"pa3 ba bg-lightest-blue tc br2 b--pink\"\r\n        placeholder=\"Search Robots...\"\r\n        htmlFor=\"robots\"\r\n        onChange={props.onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"2px solid deeppink\",\r\n        // borderColor: \"deeppink\"\r\n        height: \"500px\",\r\n        width: \"80%\",\r\n        margin: \"0 auto\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oops...That is not good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport Input from \"../components/Input\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        this.setState({ robots: users });\r\n      });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField);\r\n    });\r\n\r\n    return !robots.length ? (\r\n      <h1 className=\"tc\">Loading...</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"tc f2 ttu\">Robofriends</h1>\r\n        <Input onChange={this.handleChange} />\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport \"tachyons\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}